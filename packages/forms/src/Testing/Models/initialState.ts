export const initialState = {
  root: {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: false,
    childrenValid: false,
    errors: { firstNameNotSameAsLast: true },
    pristineValue: {
      firstName: '',
      lastName: '',
      email: '',
      phone: '',
      emergencyContacts: [
        { firstName: 'Homer', lastName: 'Simpson', email: 'homer@homer.com', relation: 'friend' },
        { firstName: 'moe', lastName: 'syzlak', email: 'moe@moe.com', relation: 'friend' },
      ],
      doctorInfo: { firstName: '', lastName: '', email: '' },
    },
    dirty: false,
    touched: false,
    value: {
      firstName: '',
      lastName: '',
      email: '',
      phone: '',
      emergencyContacts: [
        { firstName: 'Homer', lastName: 'Simpson', email: 'homer@homer.com', relation: 'friend' },
        { firstName: 'moe', lastName: 'syzlak', email: 'moe@moe.com', relation: 'friend' },
      ],
      doctorInfo: { firstName: '', lastName: '', email: '' },
    },
    controlRef: [],
    validatorErrors: { firstNameNotSameAsLast: true },
    config: {
      validators: ['firstNameNotSameAsLast'],
      controls: {
        firstName: { initialValue: '', validators: ['required'] },
        lastName: { initialValue: '', validators: ['required'] },
        email: { initialValue: '', validators: ['required', 'email'] },
        phone: { initialValue: '', validators: ['required', 'phoneNumber'] },
        emergencyContacts: {
          validators: ['required'],
          controls: [
            {
              validators: ['firstNameNotSameAsLast'],
              controls: {
                firstName: { initialValue: 'Homer', validators: ['required'] },
                lastName: { initialValue: 'Simpson', validators: ['required'] },
                email: { initialValue: 'homer@homer.com', validators: ['required', 'email'] },
                relation: { initialValue: 'friend', validators: ['required'] },
              },
            },
            {
              validators: ['firstNameNotSameAsLast'],
              controls: {
                firstName: { initialValue: 'moe', validators: ['required'] },
                lastName: { initialValue: 'syzlak', validators: ['required'] },
                email: { initialValue: 'moe@moe.com', validators: ['required', 'email'] },
                relation: { initialValue: 'friend', validators: ['required'] },
              },
            },
          ],
        },
        doctorInfo: {
          validators: ['firstNameNotSameAsLast'],
          controls: {
            firstName: { initialValue: '', validators: ['required'] },
            lastName: { initialValue: '', validators: ['required'] },
            email: { initialValue: '', validators: ['required', 'email'] },
          },
        },
      },
    },
    key: 'mf1tA',
  },
  firstName: {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: false,
    childrenValid: true,
    errors: { required: true },
    pristineValue: '',
    dirty: false,
    touched: false,
    value: '',
    controlRef: ['firstName'],
    validatorErrors: { required: true },
    config: { initialValue: '', validators: ['required'] },
    key: 'LrRAZ',
  },
  lastName: {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: false,
    childrenValid: true,
    errors: { required: true },
    pristineValue: '',
    dirty: false,
    touched: false,
    value: '',
    controlRef: ['lastName'],
    validatorErrors: { required: true },
    config: { initialValue: '', validators: ['required'] },
    key: 'C7l6z',
  },
  email: {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: false,
    childrenValid: true,
    errors: { required: true, email: false },
    pristineValue: '',
    dirty: false,
    touched: false,
    value: '',
    controlRef: ['email'],
    validatorErrors: { required: true, email: false },
    config: { initialValue: '', validators: ['required', 'email'] },
    key: '8ivnO',
  },
  phone: {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: false,
    childrenValid: true,
    errors: { required: true, phoneNumber: false },
    pristineValue: '',
    dirty: false,
    touched: false,
    value: '',
    controlRef: ['phone'],
    validatorErrors: { required: true, phoneNumber: false },
    config: { initialValue: '', validators: ['required', 'phoneNumber'] },
    key: '7adft',
  },
  emergencyContacts: {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { required: false },
    pristineValue: [
      { firstName: 'Homer', lastName: 'Simpson', email: 'homer@homer.com', relation: 'friend' },
      { firstName: 'moe', lastName: 'syzlak', email: 'moe@moe.com', relation: 'friend' },
    ],
    dirty: false,
    touched: false,
    value: [
      { firstName: 'Homer', lastName: 'Simpson', email: 'homer@homer.com', relation: 'friend' },
      { firstName: 'moe', lastName: 'syzlak', email: 'moe@moe.com', relation: 'friend' },
    ],
    controlRef: ['emergencyContacts'],
    validatorErrors: { required: false },
    config: {
      validators: ['required'],
      controls: [
        {
          validators: ['firstNameNotSameAsLast'],
          controls: {
            firstName: { initialValue: 'Homer', validators: ['required'] },
            lastName: { initialValue: 'Simpson', validators: ['required'] },
            email: { initialValue: 'homer@homer.com', validators: ['required', 'email'] },
            relation: { initialValue: 'friend', validators: ['required'] },
          },
        },
        {
          validators: ['firstNameNotSameAsLast'],
          controls: {
            firstName: { initialValue: 'moe', validators: ['required'] },
            lastName: { initialValue: 'syzlak', validators: ['required'] },
            email: { initialValue: 'moe@moe.com', validators: ['required', 'email'] },
            relation: { initialValue: 'friend', validators: ['required'] },
          },
        },
      ],
    },
    key: 'Ezg2O',
  },
  'emergencyContacts.0': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { firstNameNotSameAsLast: false },
    pristineValue: {
      firstName: 'Homer',
      lastName: 'Simpson',
      email: 'homer@homer.com',
      relation: 'friend',
    },
    dirty: false,
    touched: false,
    value: {
      firstName: 'Homer',
      lastName: 'Simpson',
      email: 'homer@homer.com',
      relation: 'friend',
    },
    controlRef: ['emergencyContacts', 0],
    validatorErrors: { firstNameNotSameAsLast: false },
    config: {
      validators: ['firstNameNotSameAsLast'],
      controls: {
        firstName: { initialValue: 'Homer', validators: ['required'] },
        lastName: { initialValue: 'Simpson', validators: ['required'] },
        email: { initialValue: 'homer@homer.com', validators: ['required', 'email'] },
        relation: { initialValue: 'friend', validators: ['required'] },
      },
    },
    key: '35AGA',
  },
  'emergencyContacts.0.firstName': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { required: false },
    pristineValue: 'Homer',
    dirty: false,
    touched: false,
    value: 'Homer',
    controlRef: ['emergencyContacts', 0, 'firstName'],
    validatorErrors: { required: false },
    config: { initialValue: 'Homer', validators: ['required'] },
    key: 'AB0c4',
  },
  'emergencyContacts.0.lastName': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { required: false },
    pristineValue: 'Simpson',
    dirty: false,
    touched: false,
    value: 'Simpson',
    controlRef: ['emergencyContacts', 0, 'lastName'],
    validatorErrors: { required: false },
    config: { initialValue: 'Simpson', validators: ['required'] },
    key: 'urW9y',
  },
  'emergencyContacts.0.email': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { required: false, email: false },
    pristineValue: 'homer@homer.com',
    dirty: false,
    touched: false,
    value: 'homer@homer.com',
    controlRef: ['emergencyContacts', 0, 'email'],
    validatorErrors: { required: false, email: false },
    config: { initialValue: 'homer@homer.com', validators: ['required', 'email'] },
    key: 'aq8Ny',
  },
  'emergencyContacts.0.relation': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { required: false },
    pristineValue: 'friend',
    dirty: false,
    touched: false,
    value: 'friend',
    controlRef: ['emergencyContacts', 0, 'relation'],
    validatorErrors: { required: false },
    config: { initialValue: 'friend', validators: ['required'] },
    key: 'mEDxV',
  },
  'emergencyContacts.1': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { firstNameNotSameAsLast: false },
    pristineValue: {
      firstName: 'moe',
      lastName: 'syzlak',
      email: 'moe@moe.com',
      relation: 'friend',
    },
    dirty: false,
    touched: false,
    value: { firstName: 'moe', lastName: 'syzlak', email: 'moe@moe.com', relation: 'friend' },
    controlRef: ['emergencyContacts', 1],
    validatorErrors: { firstNameNotSameAsLast: false },
    config: {
      validators: ['firstNameNotSameAsLast'],
      controls: {
        firstName: { initialValue: 'moe', validators: ['required'] },
        lastName: { initialValue: 'syzlak', validators: ['required'] },
        email: { initialValue: 'moe@moe.com', validators: ['required', 'email'] },
        relation: { initialValue: 'friend', validators: ['required'] },
      },
    },
    key: 'rB9JV',
  },
  'emergencyContacts.1.firstName': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { required: false },
    pristineValue: 'moe',
    dirty: false,
    touched: false,
    value: 'moe',
    controlRef: ['emergencyContacts', 1, 'firstName'],
    validatorErrors: { required: false },
    config: { initialValue: 'moe', validators: ['required'] },
    key: 'D9xzo',
  },
  'emergencyContacts.1.lastName': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { required: false },
    pristineValue: 'syzlak',
    dirty: false,
    touched: false,
    value: 'syzlak',
    controlRef: ['emergencyContacts', 1, 'lastName'],
    validatorErrors: { required: false },
    config: { initialValue: 'syzlak', validators: ['required'] },
    key: 'q4Cst',
  },
  'emergencyContacts.1.email': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { required: false, email: false },
    pristineValue: 'moe@moe.com',
    dirty: false,
    touched: false,
    value: 'moe@moe.com',
    controlRef: ['emergencyContacts', 1, 'email'],
    validatorErrors: { required: false, email: false },
    config: { initialValue: 'moe@moe.com', validators: ['required', 'email'] },
    key: 'XSkvY',
  },
  'emergencyContacts.1.relation': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: true,
    childrenValid: true,
    errors: { required: false },
    pristineValue: 'friend',
    dirty: false,
    touched: false,
    value: 'friend',
    controlRef: ['emergencyContacts', 1, 'relation'],
    validatorErrors: { required: false },
    config: { initialValue: 'friend', validators: ['required'] },
    key: 'pPQME',
  },
  doctorInfo: {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: false,
    childrenValid: false,
    errors: { firstNameNotSameAsLast: true },
    pristineValue: { firstName: '', lastName: '', email: '' },
    dirty: false,
    touched: false,
    value: { firstName: '', lastName: '', email: '' },
    controlRef: ['doctorInfo'],
    validatorErrors: { firstNameNotSameAsLast: true },
    config: {
      validators: ['firstNameNotSameAsLast'],
      controls: {
        firstName: { initialValue: '', validators: ['required'] },
        lastName: { initialValue: '', validators: ['required'] },
        email: { initialValue: '', validators: ['required', 'email'] },
      },
    },
    key: 'AQr3M',
  },
  'doctorInfo.firstName': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: false,
    childrenValid: true,
    errors: { required: true },
    pristineValue: '',
    dirty: false,
    touched: false,
    value: '',
    controlRef: ['doctorInfo', 'firstName'],
    validatorErrors: { required: true },
    config: { initialValue: '', validators: ['required'] },
    key: '455cW',
  },
  'doctorInfo.lastName': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: false,
    childrenValid: true,
    errors: { required: true },
    pristineValue: '',
    dirty: false,
    touched: false,
    value: '',
    controlRef: ['doctorInfo', 'lastName'],
    validatorErrors: { required: true },
    config: { initialValue: '', validators: ['required'] },
    key: 'MGLC3',
  },
  'doctorInfo.email': {
    asyncValidatorErrors: {},
    asyncValidateInProgress: {},
    pending: false,
    valid: false,
    childrenValid: true,
    errors: { required: true, email: false },
    pristineValue: '',
    dirty: false,
    touched: false,
    value: '',
    controlRef: ['doctorInfo', 'email'],
    validatorErrors: { required: true, email: false },
    config: { initialValue: '', validators: ['required', 'email'] },
    key: 'RrAP4',
  },
};
